<%!
    import common.project_utils as project
%><%include file="atapp.template.conf" />

[atgateway]
; listen address for client to connect, how to use it depends listen.type
% if project.is_ip_v6_enabled():
listen.address = ipv6://:::${project.get_server_gateway_port(for_server_name, for_server_index)}
% else: 
listen.address = ipv4://0.0.0.0:${project.get_server_gateway_port(for_server_name, for_server_index)}
% endif
listen.type = inner                     ; protocol type
listen.max_client = 65536               ; max client number, more client will be closed
listen.backlog = 128

; default router ${hex(project.get_server_proc_id(for_server_name, for_server_index))} 
client.router.default = ${project.get_server_proc_id(for_server_name, for_server_index)} 
client.send_buffer_size = 1048576       ; 1MB send buffer limit
client.reconnect_timeout = 180          ; reconnect timeout
client.first_idle_timeout = 10          ; first idle timeout

client.limit.total_send_bytes = 0           ; total send limit (bytes)
client.limit.total_recv_bytes = 0           ; total recv limit (bytes)
client.limit.hour_send_bytes = 0            ; send limit (bytes) in an hour
client.limit.hour_recv_bytes = 0            ; recv limit (bytes) in an hour
client.limit.minute_send_bytes = 0          ; total send (bytes) limit in one minute
client.limit.minute_recv_bytes = 0          ; total recv (bytes) limit in one minute
client.limit.total_send_times = 0           ; total send limit (times)
client.limit.total_recv_times = 0           ; total recv limit (times)
client.limit.hour_send_times = 0            ; send limit (times) in an hour
client.limit.hour_recv_times = 0            ; recv limit (times) in an hour
client.limit.minute_send_times = 0          ; total send (times) limit in one minute
client.limit.minute_recv_times = 0          ; total recv (times) limit in one minute
client.limit.message_size = 0               ; message size limit

; below descript the crypt information, but if it's used depend on listen.type
client.crypt.key = gateway-default                          ; default key
client.crypt.type = "XXTEA:AES-256-CFB:AES-128-CFB"         ; encrypt algorithm(support XXTEA,AES when listen.type=inner)
client.crypt.update_interval = 300                          ; generate a new key by every 5 minutes
client.crypt.dhparam = ../etc/dhparam.pem                   ; dynamic key